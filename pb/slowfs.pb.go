// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: slowfs.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpCode int32

const (
	OpCode_UNKNOWN    OpCode = 0
	OpCode_STATFS     OpCode = 1
	OpCode_MKNOD      OpCode = 2
	OpCode_MKDIR      OpCode = 3
	OpCode_UNLINK     OpCode = 4
	OpCode_RMDIR      OpCode = 5
	OpCode_LINK       OpCode = 6
	OpCode_SYMLINK    OpCode = 7
	OpCode_READLINK   OpCode = 8
	OpCode_RENAME     OpCode = 9
	OpCode_CHMOD      OpCode = 10
	OpCode_CHOWN      OpCode = 11
	OpCode_UTIMENS    OpCode = 12
	OpCode_CREATE     OpCode = 13
	OpCode_OPEN       OpCode = 14
	OpCode_GETATTR    OpCode = 15
	OpCode_TRUNCATE   OpCode = 16
	OpCode_READ       OpCode = 17
	OpCode_WRITE      OpCode = 18
	OpCode_RELEASE    OpCode = 19
	OpCode_FSYNC      OpCode = 20
	OpCode_OPENDIR    OpCode = 21
	OpCode_READDIR    OpCode = 22
	OpCode_RELEASEDIR OpCode = 23
)

// Enum value maps for OpCode.
var (
	OpCode_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "STATFS",
		2:  "MKNOD",
		3:  "MKDIR",
		4:  "UNLINK",
		5:  "RMDIR",
		6:  "LINK",
		7:  "SYMLINK",
		8:  "READLINK",
		9:  "RENAME",
		10: "CHMOD",
		11: "CHOWN",
		12: "UTIMENS",
		13: "CREATE",
		14: "OPEN",
		15: "GETATTR",
		16: "TRUNCATE",
		17: "READ",
		18: "WRITE",
		19: "RELEASE",
		20: "FSYNC",
		21: "OPENDIR",
		22: "READDIR",
		23: "RELEASEDIR",
	}
	OpCode_value = map[string]int32{
		"UNKNOWN":    0,
		"STATFS":     1,
		"MKNOD":      2,
		"MKDIR":      3,
		"UNLINK":     4,
		"RMDIR":      5,
		"LINK":       6,
		"SYMLINK":    7,
		"READLINK":   8,
		"RENAME":     9,
		"CHMOD":      10,
		"CHOWN":      11,
		"UTIMENS":    12,
		"CREATE":     13,
		"OPEN":       14,
		"GETATTR":    15,
		"TRUNCATE":   16,
		"READ":       17,
		"WRITE":      18,
		"RELEASE":    19,
		"FSYNC":      20,
		"OPENDIR":    21,
		"READDIR":    22,
		"RELEASEDIR": 23,
	}
)

func (x OpCode) Enum() *OpCode {
	p := new(OpCode)
	*p = x
	return p
}

func (x OpCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpCode) Descriptor() protoreflect.EnumDescriptor {
	return file_slowfs_proto_enumTypes[0].Descriptor()
}

func (OpCode) Type() protoreflect.EnumType {
	return &file_slowfs_proto_enumTypes[0]
}

func (x OpCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpCode.Descriptor instead.
func (OpCode) EnumDescriptor() ([]byte, []int) {
	return file_slowfs_proto_rawDescGZIP(), []int{0}
}

type InjectErrorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PathRe        string                 `protobuf:"bytes,1,opt,name=path_re,json=pathRe,proto3" json:"path_re,omitempty"`
	Op            OpCode                 `protobuf:"varint,2,opt,name=op,proto3,enum=slowfs.proto.OpCode" json:"op,omitempty"`
	ErrorCode     int32                  `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Possibility   float32                `protobuf:"fixed32,4,opt,name=possibility,proto3" json:"possibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InjectErrorRequest) Reset() {
	*x = InjectErrorRequest{}
	mi := &file_slowfs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InjectErrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectErrorRequest) ProtoMessage() {}

func (x *InjectErrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slowfs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectErrorRequest.ProtoReflect.Descriptor instead.
func (*InjectErrorRequest) Descriptor() ([]byte, []int) {
	return file_slowfs_proto_rawDescGZIP(), []int{0}
}

func (x *InjectErrorRequest) GetPathRe() string {
	if x != nil {
		return x.PathRe
	}
	return ""
}

func (x *InjectErrorRequest) GetOp() OpCode {
	if x != nil {
		return x.Op
	}
	return OpCode_UNKNOWN
}

func (x *InjectErrorRequest) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *InjectErrorRequest) GetPossibility() float32 {
	if x != nil {
		return x.Possibility
	}
	return 0
}

type InjectErrorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InjectErrorResponse) Reset() {
	*x = InjectErrorResponse{}
	mi := &file_slowfs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InjectErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectErrorResponse) ProtoMessage() {}

func (x *InjectErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slowfs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectErrorResponse.ProtoReflect.Descriptor instead.
func (*InjectErrorResponse) Descriptor() ([]byte, []int) {
	return file_slowfs_proto_rawDescGZIP(), []int{1}
}

func (x *InjectErrorResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type InjectLatencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PathRe        string                 `protobuf:"bytes,1,opt,name=path_re,json=pathRe,proto3" json:"path_re,omitempty"`
	Op            OpCode                 `protobuf:"varint,2,opt,name=op,proto3,enum=slowfs.proto.OpCode" json:"op,omitempty"`
	LatencyMs     int64                  `protobuf:"varint,3,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	Possibility   float32                `protobuf:"fixed32,4,opt,name=possibility,proto3" json:"possibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InjectLatencyRequest) Reset() {
	*x = InjectLatencyRequest{}
	mi := &file_slowfs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InjectLatencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectLatencyRequest) ProtoMessage() {}

func (x *InjectLatencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slowfs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectLatencyRequest.ProtoReflect.Descriptor instead.
func (*InjectLatencyRequest) Descriptor() ([]byte, []int) {
	return file_slowfs_proto_rawDescGZIP(), []int{2}
}

func (x *InjectLatencyRequest) GetPathRe() string {
	if x != nil {
		return x.PathRe
	}
	return ""
}

func (x *InjectLatencyRequest) GetOp() OpCode {
	if x != nil {
		return x.Op
	}
	return OpCode_UNKNOWN
}

func (x *InjectLatencyRequest) GetLatencyMs() int64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *InjectLatencyRequest) GetPossibility() float32 {
	if x != nil {
		return x.Possibility
	}
	return 0
}

type InjectLatencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InjectLatencyResponse) Reset() {
	*x = InjectLatencyResponse{}
	mi := &file_slowfs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InjectLatencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectLatencyResponse) ProtoMessage() {}

func (x *InjectLatencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slowfs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectLatencyResponse.ProtoReflect.Descriptor instead.
func (*InjectLatencyResponse) Descriptor() ([]byte, []int) {
	return file_slowfs_proto_rawDescGZIP(), []int{3}
}

func (x *InjectLatencyResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteFaultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []int32                `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	All           bool                   `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
	PathRe        string                 `protobuf:"bytes,3,opt,name=path_re,json=pathRe,proto3" json:"path_re,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFaultRequest) Reset() {
	*x = DeleteFaultRequest{}
	mi := &file_slowfs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFaultRequest) ProtoMessage() {}

func (x *DeleteFaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slowfs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFaultRequest.ProtoReflect.Descriptor instead.
func (*DeleteFaultRequest) Descriptor() ([]byte, []int) {
	return file_slowfs_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFaultRequest) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DeleteFaultRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *DeleteFaultRequest) GetPathRe() string {
	if x != nil {
		return x.PathRe
	}
	return ""
}

type DeleteFaultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deleted       []int32                `protobuf:"varint,1,rep,packed,name=deleted,proto3" json:"deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFaultResponse) Reset() {
	*x = DeleteFaultResponse{}
	mi := &file_slowfs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFaultResponse) ProtoMessage() {}

func (x *DeleteFaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slowfs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFaultResponse.ProtoReflect.Descriptor instead.
func (*DeleteFaultResponse) Descriptor() ([]byte, []int) {
	return file_slowfs_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteFaultResponse) GetDeleted() []int32 {
	if x != nil {
		return x.Deleted
	}
	return nil
}

type FaultVariant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Op    OpCode                 `protobuf:"varint,2,opt,name=op,proto3,enum=slowfs.proto.OpCode" json:"op,omitempty"`
	Path  string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	// Types that are valid to be assigned to Fault:
	//
	//	*FaultVariant_InjectErrorRequest
	//	*FaultVariant_InjectLatencyRequest
	Fault         isFaultVariant_Fault `protobuf_oneof:"Fault"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FaultVariant) Reset() {
	*x = FaultVariant{}
	mi := &file_slowfs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaultVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultVariant) ProtoMessage() {}

func (x *FaultVariant) ProtoReflect() protoreflect.Message {
	mi := &file_slowfs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultVariant.ProtoReflect.Descriptor instead.
func (*FaultVariant) Descriptor() ([]byte, []int) {
	return file_slowfs_proto_rawDescGZIP(), []int{6}
}

func (x *FaultVariant) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FaultVariant) GetOp() OpCode {
	if x != nil {
		return x.Op
	}
	return OpCode_UNKNOWN
}

func (x *FaultVariant) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FaultVariant) GetFault() isFaultVariant_Fault {
	if x != nil {
		return x.Fault
	}
	return nil
}

func (x *FaultVariant) GetInjectErrorRequest() *InjectErrorRequest {
	if x != nil {
		if x, ok := x.Fault.(*FaultVariant_InjectErrorRequest); ok {
			return x.InjectErrorRequest
		}
	}
	return nil
}

func (x *FaultVariant) GetInjectLatencyRequest() *InjectLatencyRequest {
	if x != nil {
		if x, ok := x.Fault.(*FaultVariant_InjectLatencyRequest); ok {
			return x.InjectLatencyRequest
		}
	}
	return nil
}

type isFaultVariant_Fault interface {
	isFaultVariant_Fault()
}

type FaultVariant_InjectErrorRequest struct {
	InjectErrorRequest *InjectErrorRequest `protobuf:"bytes,10,opt,name=inject_error_request,json=injectErrorRequest,proto3,oneof"`
}

type FaultVariant_InjectLatencyRequest struct {
	InjectLatencyRequest *InjectLatencyRequest `protobuf:"bytes,11,opt,name=inject_latency_request,json=injectLatencyRequest,proto3,oneof"`
}

func (*FaultVariant_InjectErrorRequest) isFaultVariant_Fault() {}

func (*FaultVariant_InjectLatencyRequest) isFaultVariant_Fault() {}

type Void struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Void) Reset() {
	*x = Void{}
	mi := &file_slowfs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Void) ProtoMessage() {}

func (x *Void) ProtoReflect() protoreflect.Message {
	mi := &file_slowfs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Void.ProtoReflect.Descriptor instead.
func (*Void) Descriptor() ([]byte, []int) {
	return file_slowfs_proto_rawDescGZIP(), []int{7}
}

type ListFaultsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Faults        []*FaultVariant        `protobuf:"bytes,1,rep,name=faults,proto3" json:"faults,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFaultsResponse) Reset() {
	*x = ListFaultsResponse{}
	mi := &file_slowfs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFaultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFaultsResponse) ProtoMessage() {}

func (x *ListFaultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slowfs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFaultsResponse.ProtoReflect.Descriptor instead.
func (*ListFaultsResponse) Descriptor() ([]byte, []int) {
	return file_slowfs_proto_rawDescGZIP(), []int{8}
}

func (x *ListFaultsResponse) GetFaults() []*FaultVariant {
	if x != nil {
		return x.Faults
	}
	return nil
}

var File_slowfs_proto protoreflect.FileDescriptor

const file_slowfs_proto_rawDesc = "" +
	"\n" +
	"\fslowfs.proto\x12\fslowfs.proto\"\x94\x01\n" +
	"\x12InjectErrorRequest\x12\x17\n" +
	"\apath_re\x18\x01 \x01(\tR\x06pathRe\x12$\n" +
	"\x02op\x18\x02 \x01(\x0e2\x14.slowfs.proto.OpCodeR\x02op\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\x05R\terrorCode\x12 \n" +
	"\vpossibility\x18\x04 \x01(\x02R\vpossibility\"%\n" +
	"\x13InjectErrorResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x96\x01\n" +
	"\x14InjectLatencyRequest\x12\x17\n" +
	"\apath_re\x18\x01 \x01(\tR\x06pathRe\x12$\n" +
	"\x02op\x18\x02 \x01(\x0e2\x14.slowfs.proto.OpCodeR\x02op\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x03 \x01(\x03R\tlatencyMs\x12 \n" +
	"\vpossibility\x18\x04 \x01(\x02R\vpossibility\"'\n" +
	"\x15InjectLatencyResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"O\n" +
	"\x12DeleteFaultRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x03(\x05R\x02id\x12\x10\n" +
	"\x03all\x18\x02 \x01(\bR\x03all\x12\x17\n" +
	"\apath_re\x18\x03 \x01(\tR\x06pathRe\"/\n" +
	"\x13DeleteFaultResponse\x12\x18\n" +
	"\adeleted\x18\x01 \x03(\x05R\adeleted\"\x93\x02\n" +
	"\fFaultVariant\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12$\n" +
	"\x02op\x18\x02 \x01(\x0e2\x14.slowfs.proto.OpCodeR\x02op\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12T\n" +
	"\x14inject_error_request\x18\n" +
	" \x01(\v2 .slowfs.proto.InjectErrorRequestH\x00R\x12injectErrorRequest\x12Z\n" +
	"\x16inject_latency_request\x18\v \x01(\v2\".slowfs.proto.InjectLatencyRequestH\x00R\x14injectLatencyRequestB\a\n" +
	"\x05Fault\"\x06\n" +
	"\x04Void\"H\n" +
	"\x12ListFaultsResponse\x122\n" +
	"\x06faults\x18\x01 \x03(\v2\x1a.slowfs.proto.FaultVariantR\x06faults*\xaa\x02\n" +
	"\x06OpCode\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06STATFS\x10\x01\x12\t\n" +
	"\x05MKNOD\x10\x02\x12\t\n" +
	"\x05MKDIR\x10\x03\x12\n" +
	"\n" +
	"\x06UNLINK\x10\x04\x12\t\n" +
	"\x05RMDIR\x10\x05\x12\b\n" +
	"\x04LINK\x10\x06\x12\v\n" +
	"\aSYMLINK\x10\a\x12\f\n" +
	"\bREADLINK\x10\b\x12\n" +
	"\n" +
	"\x06RENAME\x10\t\x12\t\n" +
	"\x05CHMOD\x10\n" +
	"\x12\t\n" +
	"\x05CHOWN\x10\v\x12\v\n" +
	"\aUTIMENS\x10\f\x12\n" +
	"\n" +
	"\x06CREATE\x10\r\x12\b\n" +
	"\x04OPEN\x10\x0e\x12\v\n" +
	"\aGETATTR\x10\x0f\x12\f\n" +
	"\bTRUNCATE\x10\x10\x12\b\n" +
	"\x04READ\x10\x11\x12\t\n" +
	"\x05WRITE\x10\x12\x12\v\n" +
	"\aRELEASE\x10\x13\x12\t\n" +
	"\x05FSYNC\x10\x14\x12\v\n" +
	"\aOPENDIR\x10\x15\x12\v\n" +
	"\aREADDIR\x10\x16\x12\x0e\n" +
	"\n" +
	"RELEASEDIR\x10\x172\xce\x02\n" +
	"\x06SlowFs\x12R\n" +
	"\vInjectError\x12 .slowfs.proto.InjectErrorRequest\x1a!.slowfs.proto.InjectErrorResponse\x12X\n" +
	"\rInjectLatency\x12\".slowfs.proto.InjectLatencyRequest\x1a#.slowfs.proto.InjectLatencyResponse\x12R\n" +
	"\vDeleteFault\x12 .slowfs.proto.DeleteFaultRequest\x1a!.slowfs.proto.DeleteFaultResponse\x12B\n" +
	"\n" +
	"ListFaults\x12\x12.slowfs.proto.Void\x1a .slowfs.proto.ListFaultsResponseB Z\x1egithub.com/fanyang89/slowfs/pbb\x06proto3"

var (
	file_slowfs_proto_rawDescOnce sync.Once
	file_slowfs_proto_rawDescData []byte
)

func file_slowfs_proto_rawDescGZIP() []byte {
	file_slowfs_proto_rawDescOnce.Do(func() {
		file_slowfs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_slowfs_proto_rawDesc), len(file_slowfs_proto_rawDesc)))
	})
	return file_slowfs_proto_rawDescData
}

var file_slowfs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_slowfs_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_slowfs_proto_goTypes = []any{
	(OpCode)(0),                   // 0: slowfs.proto.OpCode
	(*InjectErrorRequest)(nil),    // 1: slowfs.proto.InjectErrorRequest
	(*InjectErrorResponse)(nil),   // 2: slowfs.proto.InjectErrorResponse
	(*InjectLatencyRequest)(nil),  // 3: slowfs.proto.InjectLatencyRequest
	(*InjectLatencyResponse)(nil), // 4: slowfs.proto.InjectLatencyResponse
	(*DeleteFaultRequest)(nil),    // 5: slowfs.proto.DeleteFaultRequest
	(*DeleteFaultResponse)(nil),   // 6: slowfs.proto.DeleteFaultResponse
	(*FaultVariant)(nil),          // 7: slowfs.proto.FaultVariant
	(*Void)(nil),                  // 8: slowfs.proto.Void
	(*ListFaultsResponse)(nil),    // 9: slowfs.proto.ListFaultsResponse
}
var file_slowfs_proto_depIdxs = []int32{
	0,  // 0: slowfs.proto.InjectErrorRequest.op:type_name -> slowfs.proto.OpCode
	0,  // 1: slowfs.proto.InjectLatencyRequest.op:type_name -> slowfs.proto.OpCode
	0,  // 2: slowfs.proto.FaultVariant.op:type_name -> slowfs.proto.OpCode
	1,  // 3: slowfs.proto.FaultVariant.inject_error_request:type_name -> slowfs.proto.InjectErrorRequest
	3,  // 4: slowfs.proto.FaultVariant.inject_latency_request:type_name -> slowfs.proto.InjectLatencyRequest
	7,  // 5: slowfs.proto.ListFaultsResponse.faults:type_name -> slowfs.proto.FaultVariant
	1,  // 6: slowfs.proto.SlowFs.InjectError:input_type -> slowfs.proto.InjectErrorRequest
	3,  // 7: slowfs.proto.SlowFs.InjectLatency:input_type -> slowfs.proto.InjectLatencyRequest
	5,  // 8: slowfs.proto.SlowFs.DeleteFault:input_type -> slowfs.proto.DeleteFaultRequest
	8,  // 9: slowfs.proto.SlowFs.ListFaults:input_type -> slowfs.proto.Void
	2,  // 10: slowfs.proto.SlowFs.InjectError:output_type -> slowfs.proto.InjectErrorResponse
	4,  // 11: slowfs.proto.SlowFs.InjectLatency:output_type -> slowfs.proto.InjectLatencyResponse
	6,  // 12: slowfs.proto.SlowFs.DeleteFault:output_type -> slowfs.proto.DeleteFaultResponse
	9,  // 13: slowfs.proto.SlowFs.ListFaults:output_type -> slowfs.proto.ListFaultsResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_slowfs_proto_init() }
func file_slowfs_proto_init() {
	if File_slowfs_proto != nil {
		return
	}
	file_slowfs_proto_msgTypes[6].OneofWrappers = []any{
		(*FaultVariant_InjectErrorRequest)(nil),
		(*FaultVariant_InjectLatencyRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_slowfs_proto_rawDesc), len(file_slowfs_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_slowfs_proto_goTypes,
		DependencyIndexes: file_slowfs_proto_depIdxs,
		EnumInfos:         file_slowfs_proto_enumTypes,
		MessageInfos:      file_slowfs_proto_msgTypes,
	}.Build()
	File_slowfs_proto = out.File
	file_slowfs_proto_goTypes = nil
	file_slowfs_proto_depIdxs = nil
}
